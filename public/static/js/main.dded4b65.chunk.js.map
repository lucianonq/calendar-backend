{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReduces.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","actions/ui.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarModal.js","components/calendar/CalendarEvent.js","helpers/calendar-messages-es.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","uiOpenModal","AddNewFab","DeleteEventFab","getState","console","log","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","oneHour","clone","initEvent","title","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","hanldeInputChange","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","evento","_id","eventStartAddNew","minDate","autoComplete","rows","CalendarEvent","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","location","pathname","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dded4b65.chunk.js","sourcesContent":["export const types = {\r\n    uiOpenModal: '[ui] Open Modal',\r\n    uiCloseModal: '[ui] Close Modal',\r\n\r\n    eventSetAvtive: '[event] Set active',\r\n    eventLogout: '[event] Logout',\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear Active Event',\r\n    eventUpdate: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout'\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true\r\n}\r\n\r\nexport const authReducer = ( state =  initialState, action ) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     notes: 'Comprar el pastel',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Luciano'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case types.eventSetAvtive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            };\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [ ...state.events, action.payload ]\r\n            }\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        case types.eventUpdate:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => ( e.id === action.payload.id ) ? action.payload : e\r\n                )\r\n            }\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => ( e.id !== state.activeEvent.id )\r\n                ),\r\n                activeEvent: null\r\n            }\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            }\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n    switch( action.type ){\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReduces';\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nexport const fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n\r\n    if (method === 'GET') {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\nexport const fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if (method === 'GET') {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n","import moment from \"moment\"\r\n\r\nexport const prepareEvents = (events = []) => {\r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment( e.end ).toDate(),\r\n            start: moment( e.start ).toDate()\r\n        })\r\n    )\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async(dispatch, getState) => {\r\n        const {uid, name} = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                console.log(event);\r\n                dispatch( eventAddNew(event) );\r\n            }\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n}\r\n\r\nconst eventAddNew = ( event ) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = ( event ) => ({\r\n    type: types.eventSetAvtive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n});\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken(`events/${ event.id }`, event, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch( eventUpdated( event ) );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = ( event ) => ({\r\n    type: types.eventUpdate,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n    return async(dispatch, getState) => {\r\n        const { id } = getState().calendar.activeEvent;\r\n\r\n        try {\r\n            const resp = await fetchConToken(`events/${ id }`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch( eventDeleted() );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({ type: types.eventDeleted });\r\n\r\nexport const eventStartLoading = () => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents( body.eventos );\r\n\r\n            dispatch( eventLoaded( events ) );\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n});\r\n\r\nexport const eventLogout = () => ({ type: types.eventLogout });","import Swal from \"sweetalert2\";\r\n\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async( dispatch ) => {\r\n        const resp = await fetchSinToken('auth', {email, password}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            Swal.fire('Error', body.msg);\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = ( email, password, name ) => {\r\n    return async( dispatch ) => {\r\n        const resp = await fetchSinToken('auth/new', {name, email, password}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch) => {\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem( 'token', body.token );\r\n            localStorage.setItem( 'token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            dispatch( checkingFinish() );\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return ( dispatch ) => {\r\n        localStorage.clear();\r\n        dispatch( eventLogout() );\r\n        dispatch( logout() );\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout });","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: 'luciano@gmail.com',\r\n        lPassword: '123456'\r\n    });\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: 'Lucho',\r\n        rEmail: 'lucho@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456'\r\n    });\r\n\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch( startLogin(lEmail, lPassword) );\r\n    }\r\n\r\n    const hanldeRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( rPassword1 !== rPassword2 ) {\r\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales');\r\n        }\r\n\r\n        dispatch( startRegister(rEmail, rPassword1, rName) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ hanldeRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={ rName }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={ rEmail }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={ rPassword1 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={ rPassword2 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n    const { name } = useSelector( state => state.auth );\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                { name }\r\n            </span>\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={ handleLogout }\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\r\n\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const newEvent = () => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={ newEvent }\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const hanldeDelete = () => {\r\n        dispatch( eventStartDelete() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ hanldeDelete }\r\n        >\r\n            <i className=\"fas fa-trash\" ></i>\r\n            <span> Borrar evento </span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\nimport { useEffect } from 'react';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n  };\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst oneHour = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: oneHour.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n    const dispatch = useDispatch();\r\n    const { modalOpen } = useSelector( state => state.ui );\r\n    const { activeEvent } = useSelector( state => state.calendar );\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(oneHour.toDate());\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    const [formValues, setFormValues] = useState({ initEvent });\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if ( activeEvent ) {\r\n            setFormValues( activeEvent );\r\n            setDateStart( activeEvent.start );\r\n            setDateEnd( activeEvent.end );\r\n        } else {\r\n            setFormValues( initEvent );\r\n            setDateStart( now.toDate() );\r\n            setDateEnd( oneHour.toDate() );\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const hanldeInputChange = ({target}) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n    \r\n    const closeModal = () => {\r\n        dispatch( uiCloseModal() );\r\n        dispatch( eventClearActiveEvent() );  \r\n        setFormValues( initEvent );\r\n    }\r\n\r\n    const hanldeStartDateChange = ( e ) => {\r\n        setDateStart( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        });\r\n    }\r\n\r\n    const hanldeEndDateChange = ( e ) => {\r\n        setDateEnd( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        });\r\n    }\r\n\r\n    const handleSubmitForm = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment( start );\r\n        const momentEnd = moment( end );\r\n\r\n        if ( momentStart.isSameOrAfter( momentEnd ) ){\r\n            return Swal.fire('Error', 'La fecha fin debe ser mayor a la fecha de inicio', 'error');\r\n        }\r\n\r\n        if ( title.trim().length < 2 ){\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        //TODO realizar grabacion en BD\r\n        if ( activeEvent ) {\r\n            dispatch( eventStartUpdate(formValues) );\r\n        } else {\r\n            dispatch( eventStartAddNew(formValues) );\r\n        }\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={ modalOpen }\r\n            onRequestClose={ closeModal }\r\n            style={ customStyles }\r\n            closeTimeoutMS={ 200 }\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> { (activeEvent) ? 'Editar evento' : 'Nuevo evento' } </h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={ handleSubmitForm }    \r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={ hanldeStartDateChange }\r\n                        value={ dateStart }\r\n                        className='form-control'\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={ hanldeEndDateChange }\r\n                        value={ dateEnd }\r\n                        minDate={ dateStart }\r\n                        className='form-control'\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={ `form-control ${ !titleValid && 'is-invalid' }` }\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={ hanldeInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ hanldeInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    const {title, user} = event;\r\n    return (\r\n        <div>\r\n            <span>{ title }</span>\r\n            <strong>- { user.name }</strong>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react';\r\nimport moment from 'moment';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\n\r\nimport 'moment/locale/es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { AddNewFab } from '../ui/AddNewFab'\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab'\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector( state => state.calendar );\r\n    const { uid } = useSelector( state => state.auth );\r\n\r\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\r\n\r\n    useEffect(() => {\r\n        dispatch( eventStartLoading() );\r\n    }, [dispatch]);\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch( eventSetActive(e) );\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSeectSlot = (e) => {\r\n        dispatch( eventClearActiveEvent() );\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return{\r\n            style\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={ messages }\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelectEvent }\r\n                onView={ onViewChange }\r\n                onSelectSlot={ onSeectSlot }\r\n                selectable={ true }\r\n                view={ lastView }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n            {\r\n                activeEvent && \r\n                (\r\n                    <DeleteEventFab />\r\n                )\r\n            }\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    localStorage.setItem('lastpath', rest.location.pathname);\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated ) \r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/login\" /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated ) \r\n                ? ( <Redirect to=\"/\" /> )\r\n                : ( <Component { ...props } /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector( state => state.auth );\r\n\r\n    useEffect(() => {\r\n        dispatch( startChecking() );\r\n    }, [dispatch]);\r\n    \r\n\r\n    if (checking){\r\n        return (<h5>Espere...</h5>)\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        exact \r\n                        path=\"/login\" \r\n                        component={ LoginScreen } \r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n                    <PrivateRoute \r\n                        exact \r\n                        path=\"/\" \r\n                        component={ CalendarScreen } \r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n                    \r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './router/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}